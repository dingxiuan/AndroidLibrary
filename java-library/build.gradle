

apply plugin: 'java'

//apply plugin: 'executable-jar'

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

tasks.withType(Javadoc) {
    options.encoding = "UTF-8"
}

sourceSets {
    main {
        java.srcDirs = [
                'src/main/java/common',
                'src/main/java/library'
        ]
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    testCompile 'junit:junit:4.12'
    compile 'org.slf4j:slf4j-api:1.7.21'

    // okhttp
    compile 'com.squareup.okhttp3:okhttp:3.8.1'
    // retrofit
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:retrofit-converters:2.3.0'
    compile 'com.squareup.retrofit2:retrofit-adapters:2.3.0'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'
    compile 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'

    // rxJava
//    compile 'io.reactivex.rxjava2:rxjava:2.1.3'
    compile 'io.reactivex.rxjava2:rxjava:2.1.1'
    // gson
    compile 'com.google.code.gson:gson:2.8.1'

}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

def jarName = 'java-utils-v2.6.0';

task deleteOldJar(type: Delete) {
    delete 'build/outputs/'+ jarName
}

task exportJar(type: Copy) {
    from('build/classes/java/main')
    into('build/libs/')
    include('**/*.class')
    rename ('classes.jar', jarName)
}

exportJar.dependsOn(deleteOldJar, build)